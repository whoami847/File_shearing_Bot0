from fastapi import FastAPI
from contextlib import asynccontextmanager
from fastapi.middleware.cors import CORSMiddleware

# Lifespan management for proper startup/shutdown
@asynccontextmanager
async def lifespan(app: FastAPI):
    # Startup code
    print("Starting web server...")
    yield
    # Shutdown code
    print("Web server shutting down...")

app = FastAPI(lifespan=lifespan)

# Configure CORS (adjust origins as needed)
app.add_middleware(
    CORSMiddleware,
    allow_origins=["*"],
    allow_credentials=True,
    allow_methods=["*"],
    allow_headers=["*"],
)

@app.get("/")
async def root():
    return {
        "message": "File Sharing Bot API",
        "docs": "/docs",
        "health_check": "/health"
    }

@app.get("/health")
async def health_check():
    return {
        "status": "ok",
        "details": {
            "version": "1.0.0",
            "service": "file-sharing-bot"
        }
    }
