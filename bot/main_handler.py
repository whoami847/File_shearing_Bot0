import logging
import asyncio
from pyrogram import Client, filters

# рж▓ржЧрж┐ржВ рж╕рзЗржЯржЖржк
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(levelname)s - %(message)s'
)
logger = logging.getLogger(__name__)

app = Client(
    "my_bot",
    api_id=123456,       # ржЖржкржирж╛рж░ API_ID ржжрж┐ржпрж╝рзЗ рж░рж┐ржкрзНрж▓рзЗрж╕ ржХрж░рзБржи
    api_hash="abc123",   # ржЖржкржирж╛рж░ API_HASH ржжрж┐ржпрж╝рзЗ рж░рж┐ржкрзНрж▓рзЗрж╕ ржХрж░рзБржи
    bot_token="TOKEN"    # ржЖржкржирж╛рж░ ржмржЯ ржЯрзЛржХрзЗржи ржжрж┐ржпрж╝рзЗ рж░рж┐ржкрзНрж▓рзЗрж╕ ржХрж░рзБржи
)

@app.on_message(filters.command("start"))
async def start(client, message):
    logger.info(f"User {message.from_user.id} sent /start")
    await message.reply("ЁЯОЙ ржмржЯ ржПржХрзНржЯрж┐ржн! /help рж▓рж┐ржЦрзЗ ржХржорж╛ржирзНржбржЧрзБрж▓рзЛ ржжрзЗржЦрзБржи")

@app.on_message(filters.command("ping"))
async def ping(client, message):
    await message.reply("ЁЯПУ ржкржВ! ржмржЯ рж▓рж╛ржЗржн ржЖржЫрзЗ")

async def main():
    await app.start()
    logger.info("ржмржЯ рж╕ржлрж▓ржнрж╛ржмрзЗ рж╕рзНржЯрж╛рж░рзНржЯ рж╣ржпрж╝рзЗржЫрзЗ!")
    await asyncio.Event().wait()  # ржмржЯ ржЪрж▓рждрзЗ ржерж╛ржХржмрзЗ

if __name__ == "__main__":
    asyncio.run(main())
